version: '3'

services:

  broker-service:
    build: 
      context: broker-service
      dockerfile: broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  # Name of the service
  logger-service:
    # Path to the Dockerfile
    build: 
      context: logger-service
      dockerfile: logger-service.dockerfile
    # Restart policy (always, unless-stopped, on-failure)
    restart: always
    # Port mapping (map port 8082 on our local machine to port 80 in the container) because we use the port of the docker not local machine port
    ports:
      - "8082:80"
    # Deploy only one instance of the service
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build: 
      context: authentication-service
      dockerfile: authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=GMT+1 connect_timeout=5"

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - postgres-data:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - mongo-data:/data/db/

  mailer-service:
    build: 
      context: mail-service
      dockerfile: mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "Ajiboye Adedotun"
      MAIL_ENCRYPTION: none

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/

  listener-service:
    build: 
      context: listener-service
      dockerfile: listener-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1

volumes:
  postgres-data:
  mongo-data:
  rabbitmq-data:
